diff -Nru -x '*~' xapian-core-1.2.16.orig/api/CMakeLists.txt xapian-core-1.2.16/api/CMakeLists.txt
--- xapian-core-1.2.16.orig/api/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/api/CMakeLists.txt	2015-08-04 05:14:44.241554700 -0700
@@ -0,0 +1,35 @@
+# api subdirectory
+
+set(api_SRCS
+    compactor.cc
+    decvalwtsource.cc
+    documentvaluelist.cc
+    editdistance.cc
+    emptypostlist.cc
+    error.cc
+    errorhandler.cc
+    expanddecider.cc
+    keymaker.cc
+    leafpostlist.cc
+    matchspy.cc
+    omdatabase.cc
+    omdocument.cc
+    omenquire.cc
+    ompositionlistiterator.cc
+    ompostlistiterator.cc
+    omquery.cc
+    omqueryinternal.cc
+    omtermlistiterator.cc
+    postingsource.cc
+    postlist.cc
+    registry.cc
+    replication.cc
+    sortable-serialise.cc
+    termlist.cc
+    valueiterator.cc
+    valuerangeproc.cc
+    valuesetmatchdecider.cc
+    version.cc
+)
+
+add_library(api OBJECT ${api_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/api/omdatabase.cc xapian-core-1.2.16/api/omdatabase.cc
--- xapian-core-1.2.16.orig/api/omdatabase.cc	2013-12-03 16:13:22.000000000 -0800
+++ xapian-core-1.2.16/api/omdatabase.cc	2015-08-04 05:14:44.241554700 -0700
@@ -47,6 +47,7 @@
 
 #include <cstring>
 #include <vector>
+#include <algorithm>
 
 using namespace std;
 
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/brass/CMakeLists.txt xapian-core-1.2.16/backends/brass/CMakeLists.txt
--- xapian-core-1.2.16.orig/backends/brass/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/backends/brass/CMakeLists.txt	2015-08-04 05:14:44.241554700 -0700
@@ -0,0 +1,33 @@
+# backends / brass
+
+if(BUILD_BACKEND_BRASS)
+    set(backends_brass_SRCS
+        brass_alldocspostlist.cc
+        brass_alltermslist.cc
+        brass_btreebase.cc
+        brass_compact.cc
+        brass_cursor.cc
+        brass_database.cc
+        brass_databasereplicator.cc
+        brass_dbstats.cc
+        brass_document.cc
+        brass_inverter.cc
+        brass_metadata.cc
+        brass_positionlist.cc
+        brass_postlist.cc
+        brass_record.cc
+        brass_spelling.cc
+        brass_spellingwordslist.cc
+        brass_synonym.cc
+        brass_table.cc
+        brass_termlist.cc
+        brass_termlisttable.cc
+        brass_valuelist.cc
+        brass_values.cc
+        brass_version.cc
+    )
+
+    add_library(backend_brass OBJECT ${backends_brass_SRCS})
+
+    add_library(brasscheck brass_check.cc)
+endif()
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/chert/CMakeLists.txt xapian-core-1.2.16/backends/chert/CMakeLists.txt
--- xapian-core-1.2.16.orig/backends/chert/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/backends/chert/CMakeLists.txt	2015-08-04 05:14:44.257179700 -0700
@@ -0,0 +1,34 @@
+# backends / chert
+
+if(BUILD_BACKEND_CHERT)
+    set(backends_chert_SRCS
+        chert_alldocsmodifiedpostlist.cc
+        chert_alldocspostlist.cc
+        chert_alltermslist.cc
+        chert_btreebase.cc
+        chert_compact.cc
+        chert_cursor.cc
+        chert_database.cc
+        chert_databasereplicator.cc
+        chert_dbstats.cc
+        chert_document.cc
+        chert_metadata.cc
+        chert_modifiedpostlist.cc
+        chert_positionlist.cc
+        chert_postlist.cc
+        chert_record.cc
+        chert_spelling.cc
+        chert_spellingwordslist.cc
+        chert_synonym.cc
+        chert_table.cc
+        chert_termlist.cc
+        chert_termlisttable.cc
+        chert_valuelist.cc
+        chert_values.cc
+        chert_version.cc
+    )
+
+    add_library(backend_chert OBJECT ${backends_chert_SRCS})
+
+    add_library(chertcheck chert_check.cc)
+endif()
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/CMakeLists.txt xapian-core-1.2.16/backends/CMakeLists.txt
--- xapian-core-1.2.16.orig/backends/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/backends/CMakeLists.txt	2015-08-04 05:14:44.257179700 -0700
@@ -0,0 +1,37 @@
+# backends
+
+if(BUILD_BACKEND_FLINT OR BUILD_BACKEND_CHERT OR BUILD_BACKEND_BRASS)
+    find_package(ZLIB REQUIRED)
+    include_directories(${ZLIB_INCLUDE_DIRS})
+    set(xapian_LIBS ${ZLIB_LIBRARIES} PARENT_SCOPE)
+endif()
+
+
+add_subdirectory(brass)
+add_subdirectory(chert)
+add_subdirectory(flint)
+add_subdirectory(inmemory)
+add_subdirectory(multi)
+add_subdirectory(remote)
+
+set(backends_SRCS
+    alltermslist.cc
+    database.cc
+    databasereplicator.cc
+    dbfactory.cc
+    slowvaluelist.cc
+    valuelist.cc
+)
+
+if(BUILD_BACKEND_REMOTE)
+    list(APPEND backends_SRCS dbfactory_remote.cc)
+endif()
+
+if(BUILD_BACKEND_FLINT OR BUILD_BACKEND_CHERT OR BUILD_BACKEND_BRASS)
+    list(APPEND backends_SRCS
+        contiguousalldocspostlist.cc
+        flint_lock.cc
+    )
+endif()
+
+add_library(backends OBJECT ${backends_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/dbfactory.cc xapian-core-1.2.16/backends/dbfactory.cc
--- xapian-core-1.2.16.orig/backends/dbfactory.cc	2013-12-03 16:14:06.000000000 -0800
+++ xapian-core-1.2.16/backends/dbfactory.cc	2015-08-04 05:14:44.257179700 -0700
@@ -348,44 +348,49 @@
 {
     LOGCALL_CTOR(API, "Database", path);
 
+    string _path = path;
+    const int pathLen = path.length();
+    if(path[pathLen - 1] == '/' || path[pathLen - 1] == '\\') {
+        _path = path.substr(0, pathLen - 1);
+    }
     struct stat statbuf;
-    if (stat(path, &statbuf) == -1) {
-	throw DatabaseOpeningError("Couldn't stat '" + path + "'", errno);
+    if (stat(_path, &statbuf) == -1) {
+	throw DatabaseOpeningError("Couldn't stat '" + _path + "'", errno);
     }
 
     if (S_ISREG(statbuf.st_mode)) {
 	// The path is a file, so assume it is a stub database file.
-	open_stub(*this, path);
+	open_stub(*this, _path);
 	return;
     }
 
     if (rare(!S_ISDIR(statbuf.st_mode))) {
-	throw DatabaseOpeningError("Not a regular file or directory: '" + path + "'");
+	throw DatabaseOpeningError("Not a regular file or directory: '" + _path + "'");
     }
 
 #ifdef XAPIAN_HAS_CHERT_BACKEND
-    if (file_exists(path + "/iamchert")) {
-	internal.push_back(new ChertDatabase(path));
+    if (file_exists(_path + "/iamchert")) {
+	internal.push_back(new ChertDatabase(_path));
 	return;
     }
 #endif
 
 #ifdef XAPIAN_HAS_FLINT_BACKEND
-    if (file_exists(path + "/iamflint")) {
-	internal.push_back(new FlintDatabase(path));
+    if (file_exists(_path + "/iamflint")) {
+	internal.push_back(new FlintDatabase(_path));
 	return;
     }
 #endif
 
 #ifdef XAPIAN_HAS_BRASS_BACKEND
-    if (file_exists(path + "/iambrass")) {
-	internal.push_back(new BrassDatabase(path));
+    if (file_exists(_path + "/iambrass")) {
+	internal.push_back(new BrassDatabase(_path));
 	return;
     }
 #endif
 
     // Check for "stub directories".
-    string stub_file = path;
+    string stub_file = _path;
     stub_file += "/XAPIANDB";
     if (rare(!file_exists(stub_file))) {
 	throw DatabaseOpeningError("Couldn't detect type of database");
@@ -419,38 +424,44 @@
     } type = UNSET;
 #endif
     struct stat statbuf;
-    if (stat(path, &statbuf) == -1) {
+    string _path = path;
+    const int pathLen = path.length();
+    if(path[pathLen - 1] == '/' || path[pathLen - 1] == '\\') {
+        _path = path.substr(0, pathLen - 1);
+    }
+
+    if (stat(_path, &statbuf) == -1) {
 	// ENOENT probably just means that we need to create the directory.
 	if (errno != ENOENT)
-	    throw DatabaseOpeningError("Couldn't stat '" + path + "'", errno);
+	    throw DatabaseOpeningError("Couldn't stat '" + _path + "'", errno);
     } else {
 	// File or directory already exists.
 
 	if (S_ISREG(statbuf.st_mode)) {
 	    // The path is a file, so assume it is a stub database file.
-	    open_stub(*this, path, action);
+	    open_stub(*this, _path, action);
 	    return;
 	}
 
 	if (rare(!S_ISDIR(statbuf.st_mode))) {
-	    throw DatabaseOpeningError("Not a regular file or directory: '" + path + "'");
+	    throw DatabaseOpeningError("Not a regular file or directory: '" + _path + "'");
 	}
 
-	if (file_exists(path + "/iamchert")) {
+	if (file_exists(_path + "/iamchert")) {
 	    // Existing chert DB.
 #ifdef XAPIAN_HAS_CHERT_BACKEND
 	    type = CHERT;
 #else
 	    throw FeatureUnavailableError("Chert backend disabled");
 #endif
-	} else if (file_exists(path + "/iamflint")) {
+	} else if (file_exists(_path + "/iamflint")) {
 	    // Existing flint DB.
 #ifdef XAPIAN_HAS_FLINT_BACKEND
 	    type = FLINT;
 #else
 	    throw FeatureUnavailableError("Flint backend disabled");
 #endif
-	} else if (file_exists(path + "/iambrass")) {
+	} else if (file_exists(_path + "/iambrass")) {
 	    // Existing brass DB.
 #ifdef XAPIAN_HAS_BRASS_BACKEND
 	    type = BRASS;
@@ -459,7 +470,7 @@
 #endif
 	} else {
 	    // Check for "stub directories".
-	    string stub_file = path;
+	    string stub_file = _path;
 	    stub_file += "/XAPIANDB";
 	    if (usual(file_exists(stub_file))) {
 		open_stub(*this, stub_file, action);
@@ -487,12 +498,12 @@
 	// by preference.
 #ifdef XAPIAN_HAS_CHERT_BACKEND
 	case CHERT:
-	    internal.push_back(new ChertWritableDatabase(path, action, 8192));
+	    internal.push_back(new ChertWritableDatabase(_path, action, 8192));
 	    break;
 #endif
 #ifdef XAPIAN_HAS_FLINT_BACKEND
 	case FLINT:
-	    internal.push_back(new FlintWritableDatabase(path, action, 8192));
+	    internal.push_back(new FlintWritableDatabase(_path, action, 8192));
 	    break;
 #endif
 #ifdef XAPIAN_HAS_BRASS_BACKEND
@@ -500,7 +511,7 @@
 #if defined XAPIAN_HAS_CHERT_BACKEND || defined XAPIAN_HAS_FLINT_BACKEND
 brass:
 #endif
-	    internal.push_back(new BrassWritableDatabase(path, action, 8192));
+	    internal.push_back(new BrassWritableDatabase(_path, action, 8192));
 	    break;
 #endif
     }
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/flint/CMakeLists.txt xapian-core-1.2.16/backends/flint/CMakeLists.txt
--- xapian-core-1.2.16.orig/backends/flint/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/backends/flint/CMakeLists.txt	2015-08-04 05:14:44.257179700 -0700
@@ -0,0 +1,31 @@
+# backends / flint
+
+if(BUILD_BACKEND_FLINT)
+    set(backends_flint_SRCS
+        flint_alldocspostlist.cc
+        flint_alltermslist.cc
+        flint_btreebase.cc
+        flint_compact.cc
+        flint_cursor.cc
+        flint_database.cc
+        flint_databasereplicator.cc
+        flint_document.cc
+        flint_metadata.cc
+        flint_modifiedpostlist.cc
+        flint_positionlist.cc
+        flint_postlist.cc
+        flint_record.cc
+        flint_spelling.cc
+        flint_spellingwordslist.cc
+        flint_synonym.cc
+        flint_table.cc
+        flint_termlist.cc
+        flint_termlisttable.cc
+        flint_values.cc
+        flint_version.cc
+    )
+
+    add_library(backend_flint OBJECT ${backends_flint_SRCS})
+
+    add_library(flintcheck flint_check.cc)
+endif()
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/inmemory/CMakeLists.txt xapian-core-1.2.16/backends/inmemory/CMakeLists.txt
--- xapian-core-1.2.16.orig/backends/inmemory/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/backends/inmemory/CMakeLists.txt	2015-08-04 05:14:44.257179700 -0700
@@ -0,0 +1,14 @@
+# backends / inmemory
+
+if(BUILD_BACKEND_INMEMORY)
+    set(backends_inmemory_SRCS
+        inmemory_alltermslist.cc
+        inmemory_database.cc
+        inmemory_document.cc
+        inmemory_positionlist.cc
+    )
+
+    add_library(backend_inmemory OBJECT ${backends_inmemory_SRCS})
+else()
+    add_library(backend_inmemory inmemory_positionlist.cc)
+endif()
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/multi/CMakeLists.txt xapian-core-1.2.16/backends/multi/CMakeLists.txt
--- xapian-core-1.2.16.orig/backends/multi/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/backends/multi/CMakeLists.txt	2015-08-04 05:14:44.257179700 -0700
@@ -0,0 +1,10 @@
+# backends / multi
+
+set(backends_multi_SRCS
+    multi_alltermslist.cc
+    multi_postlist.cc
+    multi_termlist.cc
+    multi_valuelist.cc
+)
+
+add_library(backend_multi OBJECT ${backends_multi_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/backends/remote/CMakeLists.txt xapian-core-1.2.16/backends/remote/CMakeLists.txt
--- xapian-core-1.2.16.orig/backends/remote/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/backends/remote/CMakeLists.txt	2015-08-04 05:14:44.257179700 -0700
@@ -0,0 +1,12 @@
+# backends / remote
+
+if(BUILD_BACKEND_REMOTE)
+    set(backends_remote_SRCS
+        remote-document.cc
+        net_postlist.cc
+        net_termlist.cc
+        remote-database.cc
+    )
+
+    add_library(backend_remote OBJECT ${backends_remote_SRCS})
+endif()
diff -Nru -x '*~' xapian-core-1.2.16.orig/bin/CMakeLists.txt xapian-core-1.2.16/bin/CMakeLists.txt
--- xapian-core-1.2.16.orig/bin/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/bin/CMakeLists.txt	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,72 @@
+# bin
+if(BUILD_BACKEND_BRASS OR BUILD_BACKEND_CHERT OR BUILD_BACKEND_FLINT)
+    find_package(ZLIB REQUIRED)
+    include_directories(
+        ${CMAKE_SOURCE_DIR}/backends/brass
+        ${CMAKE_SOURCE_DIR}/backends/chert
+        ${CMAKE_SOURCE_DIR}/backends/flint
+        ${ZLIB_INCLUDE_DIRS}
+    )
+    set(xapian_check_SRCS xapian-check.cc)
+    set(xapian_check_LIBS)
+    if(BUILD_BACKEND_BRASS)
+        list(APPEND xapian_check_SRCS xapian-check-brass.cc)
+        list(APPEND xapian_check_LIBS brasscheck)
+    endif()
+    if(BUILD_BACKEND_CHERT)
+        list(APPEND xapian_check_SRCS xapian-check-chert.cc)
+        list(APPEND xapian_check_LIBS chertcheck)
+    endif()
+    if(BUILD_BACKEND_FLINT)
+        list(APPEND xapian_check_SRCS xapian-check-flint.cc)
+        list(APPEND xapian_check_LIBS flintcheck)
+    endif()
+
+    add_executable(xapian-check ${xapian_check_SRCS})
+    target_link_libraries(xapian-check ${xapian_check_LIBS} xapian)
+    list(APPEND _targets xapian-check)
+
+    set(xapian_compact_SRCS xapian-compact.cc)
+    add_executable(xapian-compact ${xapian_compact_SRCS})
+    target_link_libraries(xapian-compact getopt xapian)
+    list(APPEND _targets xapian-compact)
+
+    set(xapian_inspect_SRCS xapian-inspect.cc)
+    add_executable(xapian-inspect ${xapian_inspect_SRCS})
+    target_link_libraries(xapian-inspect getopt xapian)
+    list(APPEND _targets xapian-inspect)
+
+    set(xapian_replicate_SRCS xapian-replicate.cc)
+    add_executable(xapian-replicate ${xapian_replicate_SRCS})
+    target_link_libraries(xapian-replicate getopt xapian)
+    list(APPEND _targets xapian-replicate)
+
+    set(xapian_replicate_server_SRCS xapian-replicate-server.cc)
+    add_executable(xapian-replicate-server ${xapian_replicate_server_SRCS})
+    target_link_libraries(xapian-replicate-server getopt xapian)
+    list(APPEND _targets xapian-replicate-server)
+endif()
+
+if(BUILD_BACKEND_CHERT AND BUILD_BACKEND_FLINT)
+    ## xapian-chert-update.cc uses FlintTable to read the old format chert db.
+    set(xapian_chert_update_SRCS xapian-chert-update.cc)
+    add_executable(xapian-chert-update ${xapian_chert_update_SRCS})
+    target_link_libraries(xapian-chert-update getopt xapian)
+    list(APPEND _targets xapian-chert-update)
+endif()
+
+if(BUILD_BACKEND_REMOTE)
+    set(xapian_progsrv_SRCS xapian-progsrv.cc)
+    add_executable(xapian-progsrv ${xapian_progsrv_SRCS})
+    target_link_libraries(xapian-progsrv getopt xapian)
+    list(APPEND _targets xapian-progsrv)
+
+    set(xapian_tcpsrv_SRCS xapian-tcpsrv.cc)
+    add_executable(xapian-tcpsrv ${xapian_tcpsrv_SRCS})
+    target_link_libraries(xapian-tcpsrv getopt xapian)
+    list(APPEND _targets xapian-tcpsrv)
+endif()
+
+install(TARGETS ${_targets} RUNTIME DESTINATION bin
+                            ARCHIVE DESTINATION lib
+                            LIBRARY DESTINATION lib)
diff -Nru -x '*~' xapian-core-1.2.16.orig/cmake/xapian-config-win32.cmake.in xapian-core-1.2.16/cmake/xapian-config-win32.cmake.in
--- xapian-core-1.2.16.orig/cmake/xapian-config-win32.cmake.in	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/cmake/xapian-config-win32.cmake.in	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,5 @@
+SET(prefix "@prefix@")
+SET(exec_prefix "@exec_prefix@")
+SET(XAPIAN_LIBRARIES "@libdir@/@LIBRARY_VERSION_PREFIX@xapian@LIBRARY_VERSION_SUFFIX@@SHLIBEXT@;rpcrt4" CACHE FILEPATH "Libraries for Xapian")
+SET(XAPIAN_INCLUDE_DIR "@incdir@" CACHE PATH "Include path for Xapian")
+SET(XAPIAN_FOUND "TRUE")
diff -Nru -x '*~' xapian-core-1.2.16.orig/CMakeLists.txt xapian-core-1.2.16/CMakeLists.txt
--- xapian-core-1.2.16.orig/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/CMakeLists.txt	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,134 @@
+project(xapian)
+
+cmake_minimum_required(VERSION 2.8)
+
+set(MAJOR_VERSION 1)
+set(MINOR_VERSION 2)
+set(REVISION 16)
+
+option(BUILD_BACKEND_BRASS "build brass backend" ON)
+option(BUILD_BACKEND_CHERT "build chert backend" ON)
+option(BUILD_BACKEND_FLINT "build flint backend" ON)
+option(BUILD_BACKEND_INMEMORY "build inmemory backend" ON)
+option(BUILD_BACKEND_REMOTE "build remote backend" ON)
+
+include_directories(
+    ${CMAKE_BINARY_DIR}/include
+    include
+    common
+    ${CMAKE_SOURCE_DIR}
+    ${ZLIB_INCLUDE_DIRS}
+)
+
+if(WIN32)
+    add_definitions(-D__WIN32__)
+endif()
+
+
+file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/include/xapian)
+configure_file(config.h.win32 ${CMAKE_BINARY_DIR}/include/config.h @COPYONLY)
+configure_file(version.h.in ${CMAKE_BINARY_DIR}/include/xapian/version.h)
+
+file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/cmake)
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+if(MSVC)
+    set(LIBRARY_VERSION_PREFIX "")
+else(MSVC)
+    set(LIBRARY_VERSION_PREFIX "lib")
+endif(MSVC)
+
+set(LIBRARY_VERSION_SUFFIX "")
+if(MSVC)
+    set(SHLIBEXT ".lib")
+elseif(MINGW)
+    set(SHLIBEXT ".dll.a")
+# FIXME: mac is missing here
+else()
+    SET(SHLIBEXT ".so")
+endif()
+set(incdir "\${prefix}/include")
+set(PACKAGE_VERSION ${MAJOR_VERSION}.${MINOR_VERSION}.${REVISION})
+
+configure_file(cmake/xapian-config-version.cmake.in ${CMAKE_BINARY_DIR}/cmake/xapian-config-version.cmake)
+configure_file(cmake/xapian-config-win32.cmake.in ${CMAKE_BINARY_DIR}/cmake/xapian-config.cmake)
+
+add_subdirectory(api)
+add_subdirectory(backends)
+add_subdirectory(common)
+add_subdirectory(expand)
+add_subdirectory(languages)
+add_subdirectory(matcher)
+add_subdirectory(net)
+add_subdirectory(queryparser)
+add_subdirectory(unicode)
+add_subdirectory(weight)
+
+add_subdirectory(bin)
+# include examples/Makefile.mk
+# include include/Makefile.mk
+
+foreach(_backend BRASS CHERT FLINT REMOTE)
+    if(BUILD_BACKEND_${_backend})
+        string(TOLOWER ${_backend} _backend_lower)
+        list(APPEND xapian_SRCS $<TARGET_OBJECTS:backend_${_backend_lower}>)
+    endif(BUILD_BACKEND_${_backend})
+endforeach()
+
+set(xapian_SRCS
+    ${xapian_SRCS}
+    $<TARGET_OBJECTS:api>
+    $<TARGET_OBJECTS:backend_inmemory>
+    $<TARGET_OBJECTS:backend_multi>
+    $<TARGET_OBJECTS:backends>
+    $<TARGET_OBJECTS:common>
+    $<TARGET_OBJECTS:expand>
+    $<TARGET_OBJECTS:languages>
+    $<TARGET_OBJECTS:matcher>
+    $<TARGET_OBJECTS:net>
+    $<TARGET_OBJECTS:queryparser>
+    $<TARGET_OBJECTS:unicode>
+    $<TARGET_OBJECTS:weight>
+)
+add_library(xapian STATIC ${xapian_SRCS})
+target_link_libraries(xapian ${xapian_LIBS})
+install(TARGETS xapian RUNTIME DESTINATION bin
+                       ARCHIVE DESTINATION lib
+                       LIBRARY DESTINATION lib)
+
+set(xapian_HDRS
+    include/xapian/base.h
+    include/xapian/compactor.h
+    include/xapian/database.h
+    include/xapian/dbfactory.h
+    include/xapian/deprecated.h
+    include/xapian/derefwrapper.h
+    include/xapian/document.h
+    include/xapian/enquire.h
+    include/xapian/error.h
+    include/xapian/errorhandler.h
+    include/xapian/expanddecider.h
+    include/xapian/keymaker.h
+    include/xapian/matchspy.h
+    include/xapian/positioniterator.h
+    include/xapian/postingiterator.h
+    include/xapian/postingsource.h
+    include/xapian/query.h
+    include/xapian/queryparser.h
+    include/xapian/registry.h
+    include/xapian/stem.h
+    include/xapian/termgenerator.h
+    include/xapian/termiterator.h
+    include/xapian/types.h
+    include/xapian/unicode.h
+    include/xapian/valueiterator.h
+    include/xapian/valuesetmatchdecider.h
+    include/xapian/visibility.h
+    include/xapian/weight.h
+    ${CMAKE_BINARY_DIR}/include/xapian/version.h
+)
+
+install(FILES ${xapian_HDRS} DESTINATION include/xapian)
+install(FILES include/xapian.h DESTINATION include)
+install(FILES ${CMAKE_BINARY_DIR}/cmake/xapian-config.cmake ${CMAKE_BINARY_DIR}/cmake/xapian-config-version.cmake DESTINATION lib/cmake/xapian)
diff -Nru -x '*~' xapian-core-1.2.16.orig/common/CMakeLists.txt xapian-core-1.2.16/common/CMakeLists.txt
--- xapian-core-1.2.16.orig/common/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/common/CMakeLists.txt	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,32 @@
+set(common_SRCS
+    bitstream.cc
+    closefrom.cc
+    const_database_wrapper.cc
+    debuglog.cc
+    fileutils.cc
+    io_utils.cc
+    msvc_dirent.cc
+    msvc_posix_wrapper.cc
+    replicate_utils.cc
+    safe.cc
+    serialise-double.cc
+    socket_utils.cc
+    str.cc
+    stringutils.cc
+    utils.cc
+)
+
+set(USE_WIN32_UUID_API 1)
+if(USE_WIN32_UUID_API)
+    list(APPEND common_SRCS
+        win32_uuid.cc
+    )
+endif()
+
+add_library(common OBJECT ${common_SRCS})
+if(USE_WIN32_UUID_API)
+    set(xapian_LIBS ${xapian_LIBS} rpcrt4 PARENT_SCOPE)
+endif()
+
+add_library(getopt getopt.cc)
+
diff -Nru -x '*~' xapian-core-1.2.16.orig/common/utils.h xapian-core-1.2.16/common/utils.h
--- xapian-core-1.2.16.orig/common/utils.h	2013-12-03 16:13:34.000000000 -0800
+++ xapian-core-1.2.16/common/utils.h	2015-08-04 05:14:44.272804700 -0700
@@ -56,7 +56,18 @@
 
 /// Allow stat to work directly on C++ strings.
 inline int stat(const string &filename, struct stat *buf) {
+#ifdef _WIN32
+    const int len = filename.length();
+    if(filename[len - 1] == '/' || filename[len - 1] == '\\') {
+        string tmp = filename;
+        tmp[len - 1] = 0;
+        return stat(tmp.c_str(), buf);
+    } else {
+#endif
     return stat(filename.c_str(), buf);
+#ifdef _WIN32
+    }
+#endif
 }
 
 /** Remove a directory, and its contents.
diff -Nru -x '*~' xapian-core-1.2.16.orig/config.h.win32 xapian-core-1.2.16/config.h.win32
--- xapian-core-1.2.16.orig/config.h.win32	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/config.h.win32	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,198 @@
+/* config.h.win32 */
+/* On Unix systems, generated by configure, but must be manually created for */
+/* Win32 / Visual C++ builds */
+
+/* Define if ftime returns void */
+#define FTIME_RETURNS_VOID 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+/* #undef HAVE_DLFCN_H */
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the `fork' function. */
+/* #undef HAVE_FORK */
+
+/* Define to 1 if you have the `fsync' function. */
+/* #undef HAVE_FSYNC */
+
+/* Define to 1 if you have the `ftime' function. */
+#define HAVE_FTIME 1
+
+/* Define to 1 if you have the `gethostname' function. */
+/* #undef HAVE_GETHOSTNAME */
+
+/* Define to 1 if you have the `gettimeofday' function. */
+/* #undef HAVE_GETTIMEOFDAY */
+
+/* Define to 1 if you have the `hstrerror' function. */
+/* #undef HAVE_HSTRERROR */
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+/* #undef HAVE_INTTYPES_H */
+
+/* Define to 1 if you have the <limits.h> header file. */
+#define HAVE_LIMITS_H 1
+
+/* Define to 1 if you have the `link' function. */
+/* #undef HAVE_LINK */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the 'socketpair' function. */
+/* #undef HAVE_SOCKETPAIR */
+
+/* Define to 1 if you have the <sstream> header file. */
+#define HAVE_SSTREAM 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+/* #undef HAVE_STDINT_H */
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <streambuf> header file. */
+#define HAVE_STREAMBUF 1
+
+/* Define to 1 if you have the `strerror' function. */
+#define HAVE_STRERROR 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+/* #undef HAVE_STRINGS_H */
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <sys/errno.h> header file. */
+/* #undef HAVE_SYS_ERRNO_H */
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+/* #undef HAVE_SYS_SELECT_H */
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <sys/utsname.h> header file. */
+/* #undef HAVE_SYS_UTSNAME_H */
+
+/* Define to 1 if you have the <unistd.h> header file. */
+/* #undef HAVE_UNISTD_H */
+
+/* Define if valgrind is installed and supports VALGRIND_COUNT_LEAKS */
+/* #undef HAVE_VALGRIND */
+
+/* Define to 1 if you have the <zlib.h> header file. */
+#define HAVE_ZLIB_H 1
+
+/* Name of package */
+#define PACKAGE "xapian-core"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "xapian-core"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "xapian-core 1.2.8"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "xapian-core"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "1.2.8"
+
+/* explicit prototype needed for pread (if any) */
+/* #undef PREAD_PROTOTYPE */
+
+/* explicit prototype needed for pwrite (if any) */
+/* #undef PWRITE_PROTOTYPE */
+
+/* Define to the name of a function implementing snprintf but not caring about
+   ISO C90 return value semantics (if one exists) */
+/* #undef SNPRINTF */
+
+/* Define to the name of a function implementing snprintf with ISO C90
+   semantics (if one exists) */
+/* #undef SNPRINTF_ISO */
+
+/* type to use for 5th parameter to getsockopt */
+#define SOCKLEN_T int
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Version number of package */
+#define VERSION "1.2.8"
+
+/* Define if you want debugging to be enabled (will cause some slow down) */
+/* #undef XAPIAN_DEBUG */
+
+/* Define if you want paranoid debugging to be enabled (will cause significant
+   slow-down) */
+/* #undef XAPIAN_DEBUG_PARANOID */
+
+/* Define if you want code profiling messages */
+/* #undef XAPIAN_DEBUG_PROFILE */
+
+/* Define if you want lots of debugging messages */
+/* #undef XAPIAN_DEBUG_VERBOSE */
+
+/* Define to disable use of visibility attributes */
+/* #undef XAPIAN_DISABLE_VISIBILITY */
+
+/* Number of bits in a file offset, on hosts where this is settable. */
+/* #undef _FILE_OFFSET_BITS */
+
+/* Define for large files, on AIX-style hosts. */
+/* #undef _LARGE_FILES */
+
+/* Define to `int' if <sys/types.h> does not define. */
+#define mode_t int
+
+/* Define to `int' if <sys/types.h> does not define. */
+#define pid_t int
+
+/* Define to `int' if <sys/types.h> does not define. */
+#ifdef _WIN64
+# define ssize_t __int64
+#else
+# define ssize_t long
+#endif
+
+/* Disable stupid MSVC "performance" warning for converting int to bool. */
+#ifdef _MSC_VER
+# pragma warning(disable:4800)
+#endif
+
+/* Disable MSVC warning about obsolete functions */
+#ifdef _MSC_VER
+# pragma warning(disable:4996)
+#endif
+
+/* Disable MSVC warning about macros with missing parameters */
+#ifdef _MSC_VER
+# pragma warning(disable:4003)
+#endif
+
+/* Define rare() as identity, since we don't have this in MSVC (See
+ * the section "Branch Prediction Hints" in xapian-core/HACKING) */
+#define rare(COND) (COND)
+
+/* Define usual() as identity, since we don't have this in MSVC (See
+ * the section "Branch Prediction Hints" in xapian-core/HACKING) */
+#define usual(COND) (COND)
+
+/* Define sizes of types as this isn't done by Windows */
+
+/* The number of bytes in a int.  */
+#define SIZEOF_INT 4
+
+/* The number of bytes in a long.  */
+#define SIZEOF_LONG 4
+
diff -Nru -x '*~' xapian-core-1.2.16.orig/expand/CMakeLists.txt xapian-core-1.2.16/expand/CMakeLists.txt
--- xapian-core-1.2.16.orig/expand/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/expand/CMakeLists.txt	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,9 @@
+# expand
+
+set(expand_SRCS
+    esetinternal.cc
+    expandweight.cc
+    ortermlist.cc
+)
+
+add_library(expand OBJECT ${expand_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/languages/CMakeLists.txt xapian-core-1.2.16/languages/CMakeLists.txt
--- xapian-core-1.2.16.orig/languages/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/languages/CMakeLists.txt	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,34 @@
+# languages
+
+set(language_NAMES
+    danish
+    dutch
+    english
+    finnish
+    french
+    german2
+    german
+    hungarian
+    italian
+    kraaij_pohlmann
+    lovins
+    norwegian
+    porter
+    portuguese
+    romanian
+    russian
+    spanish
+    swedish
+    turkish
+)
+
+set(languages_SRCS
+    stem.cc
+    steminternal.cc
+)
+
+foreach(lang ${language_NAMES})
+    list(APPEND languages_SRCS ${lang}.cc)
+endforeach()
+
+add_library(languages OBJECT ${languages_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/matcher/CMakeLists.txt xapian-core-1.2.16/matcher/CMakeLists.txt
--- xapian-core-1.2.16.orig/matcher/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/matcher/CMakeLists.txt	2015-08-04 05:14:44.272804700 -0700
@@ -0,0 +1,31 @@
+# matcher
+
+set(matcher_SRCS
+    andmaybepostlist.cc
+    andnotpostlist.cc
+    branchpostlist.cc
+    collapser.cc
+    exactphrasepostlist.cc
+    externalpostlist.cc
+    localsubmatch.cc
+    mergepostlist.cc
+    msetcmp.cc
+    msetpostlist.cc
+    multiandpostlist.cc
+    multimatch.cc
+    multixorpostlist.cc
+    orpostlist.cc
+    phrasepostlist.cc
+    queryoptimiser.cc
+    selectpostlist.cc
+    synonympostlist.cc
+    valuegepostlist.cc
+    valuerangepostlist.cc
+    valuestreamdocument.cc
+)
+
+if(BUILD_BACKEND_REMOTE)
+    list(APPEND matcher_SRCS remotesubmatch.cc)
+endif()
+
+add_library(matcher OBJECT ${matcher_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/net/CMakeLists.txt xapian-core-1.2.16/net/CMakeLists.txt
--- xapian-core-1.2.16.orig/net/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/net/CMakeLists.txt	2015-08-04 05:14:44.288429700 -0700
@@ -0,0 +1,17 @@
+# net
+
+set(net_SRCS
+    progclient.cc
+    remoteconnection.cc
+    remoteserver.cc
+    remotetcpclient.cc
+    remotetcpserver.cc
+    replicatetcpclient.cc
+    replicatetcpserver.cc
+    serialise.cc
+    tcpclient.cc
+    tcpserver.cc
+)
+
+add_library(net OBJECT ${net_SRCS})
+set(xapian_LIBS ${xapian_LIBS} ws2_32 PARENT_SCOPE)
diff -Nru -x '*~' xapian-core-1.2.16.orig/queryparser/CMakeLists.txt xapian-core-1.2.16/queryparser/CMakeLists.txt
--- xapian-core-1.2.16.orig/queryparser/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/queryparser/CMakeLists.txt	2015-08-04 05:14:44.288429700 -0700
@@ -0,0 +1,11 @@
+# queryparser
+
+set(queryparser_SRCS
+    cjk-tokenizer.cc
+    queryparser.cc
+    queryparser_internal.cc
+    termgenerator.cc
+    termgenerator_internal.cc
+)
+
+add_library(queryparser OBJECT ${queryparser_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/unicode/CMakeLists.txt xapian-core-1.2.16/unicode/CMakeLists.txt
--- xapian-core-1.2.16.orig/unicode/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/unicode/CMakeLists.txt	2015-08-04 05:14:44.288429700 -0700
@@ -0,0 +1,8 @@
+# unicode
+
+set(unicode_SRCS
+    tclUniData.cc
+    utf8itor.cc
+)
+
+add_library(unicode OBJECT ${unicode_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/version.h.in xapian-core-1.2.16/version.h.in
--- xapian-core-1.2.16.orig/version.h.in	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/version.h.in	2015-08-04 05:14:44.288429700 -0700
@@ -0,0 +1,38 @@
+// @configure_input@
+// msvc/version.h: Define preprocesor symbols for the library version.
+//
+// This version.h is for the MSVC build.  The version.h used for the Unix
+// and CYGWIN builds is generated by running the configure script.
+//
+// Copyright (C) 2007 Olly Betts
+//
+// This program is free software; you can redistribute it and/or
+// modify it under the terms of the GNU General Public License as
+// published by the Free Software Foundation; either version 2 of the
+// License, or (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program; if not, write to the Free Software
+// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+
+#ifndef XAPIAN_INCLUDED_VERSION_H
+#define XAPIAN_INCLUDED_VERSION_H
+
+#define XAPIAN_VERSION "@MAJOR_VERSION@.@MINOR_VERSION@.@REVISION@"
+#define XAPIAN_MAJOR_VERSION @MAJOR_VERSION@
+#define XAPIAN_MINOR_VERSION @MINOR_VERSION@
+#define XAPIAN_REVISION @REVISION@
+
+#define XAPIAN_HAS_BRASS_BACKEND 1
+#define XAPIAN_HAS_CHERT_BACKEND 1
+#define XAPIAN_HAS_FLINT_BACKEND 1
+#define XAPIAN_HAS_QUARTZ_BACKEND 1
+#define XAPIAN_HAS_INMEMORY_BACKEND 1
+#define XAPIAN_HAS_REMOTE_BACKEND 1
+
+#endif /* XAPIAN_INCLUDED_VERSION_H */
diff -Nru -x '*~' xapian-core-1.2.16.orig/weight/CMakeLists.txt xapian-core-1.2.16/weight/CMakeLists.txt
--- xapian-core-1.2.16.orig/weight/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ xapian-core-1.2.16/weight/CMakeLists.txt	2015-08-04 05:14:44.288429700 -0700
@@ -0,0 +1,11 @@
+# weight
+
+set(weight_SRCS
+    bm25weight.cc
+    boolweight.cc
+    tradweight.cc
+    weight.cc
+    weightinternal.cc
+)
+
+add_library(weight OBJECT ${weight_SRCS})
diff -Nru -x '*~' xapian-core-1.2.16.orig/weight/tradweight.cc xapian-core-1.2.16/weight/tradweight.cc
--- xapian-core-1.2.16.orig/weight/tradweight.cc	2013-12-03 16:13:16.000000000 -0800
+++ xapian-core-1.2.16/weight/tradweight.cc	2015-08-04 05:19:53.192726500 -0700
@@ -29,7 +29,8 @@
 #include "xapian/error.h"
 
 #include <cmath>
-
+#include <algorithm>
+ 
 using namespace std;
 
 namespace Xapian {
